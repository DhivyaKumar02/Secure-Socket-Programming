#####################################################################################################################################################################
                                                                                                                                               #

# My secret flag is 92146d257b83fc17e749fd35670b47bcc4254d0e409768b3c07db6eb83c547fa                                                                                #

#####################################################################################################################################################################
# In order to work with sockets, initially we're importing sockets.                                                                                                 #
# The hostname is "kopi.ece.neu.edu". We're using a variable named "server_hostname", where we're storing the hostname.                                             #
# Next, we create a variable named "default_server_port" and store the port number.                                                                                 #
# Here we're creating a socket instance named "client_socket" and we're passing two parameters in it.                                                               #
# The first parameter is AF_INET which refers to the address-family ipv4 and the second one is SOCK_STREAM.                                                         #
# The SOCK_STREAM means connection-oriented TCP protocol.                                                                                                           #
# Since we're the clients, we call the connect function and pass a tuple inside the parenthesis to establish connection with the server                             #
# We specify them, the hostname, and the server port number.                                                                                                        #
# Then, we create a variable name "message_from_client" where we pass our NU ID as a string, in the format "EECE7374 INTR 002665287".                               #
# We're using send function to send the data from client to the server. Here, we're encoding the message to send it in byte type.                                   #
# The message that is received from the server is stored in the "message_to_client" variable.                                                                       #
# We use the recv function to receive the data from the server via the socket.                                                                                      #
# We use "response" variable to store the server's data in string format as we're using decode function. UTF-8 is passed as a parameter in decode function.         #
# Now, as the received data is in a string, we're using the split function to convert the string to list.                                                           #
# When the element of the list's first index [1] is "EXPR", it enters the while loop.                                                                               #
# If the element of the list's first index [1] is "FAIL" or "SUCC",it doesn't enter the while loop.                                                                 #
# After entering the while loop, the program prints the response, for eg," EECE7374 EXPR 819 * 90 ".                                                                #
# Then, we're using "a","b","c","d" as variables. We're using the split function to convert the "response" string to list.                                          #
# The element of list index value of [2] is a number, [3] is an operator and [4] is a number.                                                                       #
# This part contains the mathematical expression that is to be evaluated                                                                                            #
# For "a" variable we're storing the element from the list index value [2], similarly for "b" and "c", from list index value of [3] and [4] respectively.           #
# The values are stored as string, as we've used the str function. "+" Operator is used to combine strings in the variable "d".                                     #
# Using eval function, we evaluate the string "d" which contains the mathematical expression. The value generated by the eval function is in integer.               #
# It is converted to string and is stored in the variable "answer".                                                                                                 #
# We pass this "answer" variable in the "message_from_client" variable along with the "EECE7374 RSLT" and " " .                                                     #
# "" creates space between the words. Again, we send this data from client to server using send function in byte type.                                              #
# To convert the data from string to byte, we use encode function.                                                                                                  #
# Then, we receive the data from server to client, where we decode it from byte to string. We store the string in the "response" variable.                          #
# The buffer value is 4096 i.e, the buffer size, which is passed as parameter in recv function.                                                                     #
# It is converted to list in while loop using split function.                                                                                                       #
# If the evaluated answer is wrong then that breaks the while loop and prints "EECE7374 FAIL".                                                                      #
# When enough expressions have been evaluated correctly then the server will send "EECE7374 SUCC Flag" breaking the while loop.                                     #
# Unless and until the list's first index element [1] is "EXPR", the while loop runs.                                                                               #
# If the first indexing value [1] of the list is "FAIL" or "SUCC";then the program doesn't enter the while loop.                                                    #
# It breaks the loop and prints the response.                                                                                                                       #
# If the program is correct then a flag will be generated corresponding to the NU ID.                                                                               #
# Finally, we close the connection using the close function.                                                                                                        #
#####################################################################################################################################################################

#Firstly, import the socket library
import socket

# Host name given
server_hostname = 'sample_server.py'

# Default port assigned
default_server_port = 5211

# Create a socket object
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Connect to the server
client_socket.connect((server_hostname, default_server_port))

# Store the data in the variable that needs to be sent to the server
message_from_client = "EECE7374 INTR 002665287"

# Send data to the server and encode to byte type.
client_socket.send(message_from_client.encode())

# Receive data from the server and decode to get the string ;
# Store the data from the server in "response" variable
message_to_client = client_socket.recv(4096)
response=message_to_client.decode("utf-8")

# Convert the str to list using split function,
# as long as the first index value of the list is "EXPR" the program enters the While loop
while ((response.split())[1]=="EXPR"):
    print(response)

    # Store the list elements in the variables as strings
    a=str((response.split())[2])
    b=str((response.split())[3])
    c=str((response.split())[4])

    # + Operator is used to combine strings
    d=a+b+c

    # Evaluate the incoming expressions using eval function and convert the value from integer to string;
    # Store the value in "answer" variable
    answer=str(eval(d))

    # Pass the "answer" variable in the "message_from_client" variable and print it
    message_from_client= "EECE7374 RSLT"+" "+ answer
    print(message_from_client)

    # Send the data to the server in byte type
    client_socket.send(message_from_client.encode())

    # Receive data from the server and decode to get the string
    # The buffer value is 4096;Store the data from the server in "response" variable
    message_to_client = client_socket.recv(4096)
    response = message_to_client.decode("utf-8")

# If the first indexing value of the list is not "EXPR";
# then the program doesn't enter the while loop and prints this response
print(response)

# Close the connection
client_socket.close()

# My secret flag is 92146d257b83fc17e749fd35670b47bcc4254d0e409768b3c07db6eb83c547fa
